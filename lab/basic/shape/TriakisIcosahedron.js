import Vector3D from '../geom/Vector3D';


export default class TriakisIcosahedron
{
    constructor()
    {
        let C0 = 5 * (7 + Math.sqrt(5)) / 44;
        let C1 = 5 * (3 + 2 * Math.sqrt(5)) / 22;
        let C2 = (5 + Math.sqrt(5)) / 4;
        let C3 = 5 * (13 + 5 * Math.sqrt(5)) / 44;
        let C4 = (5 + 3 * Math.sqrt(5)) / 4;

        this.vertices = [
            new Vector3D( C2, 0.0,  C4),
            new Vector3D( C2, 0.0, -C4),
            new Vector3D(-C2, 0.0,  C4),
            new Vector3D(-C2, 0.0, -C4),
            new Vector3D( C4,  C2, 0.0),
            new Vector3D( C4, -C2, 0.0),
            new Vector3D(-C4,  C2, 0.0),
            new Vector3D(-C4, -C2, 0.0),
            new Vector3D(0.0,  C4,  C2),
            new Vector3D(0.0,  C4, -C2),
            new Vector3D(0.0, -C4,  C2),
            new Vector3D(0.0, -C4, -C2),
            new Vector3D(0.0,  C0,  C3),
            new Vector3D(0.0,  C0, -C3),
            new Vector3D(0.0, -C0,  C3),
            new Vector3D(0.0, -C0, -C3),
            new Vector3D( C3, 0.0,  C0),
            new Vector3D( C3, 0.0, -C0),
            new Vector3D(-C3, 0.0,  C0),
            new Vector3D(-C3, 0.0, -C0),
            new Vector3D( C0,  C3, 0.0),
            new Vector3D( C0, -C3, 0.0),
            new Vector3D(-C0,  C3, 0.0),
            new Vector3D(-C0, -C3, 0.0),
            new Vector3D( C1,  C1,  C1),
            new Vector3D( C1,  C1, -C1),
            new Vector3D( C1, -C1,  C1),
            new Vector3D( C1, -C1, -C1),
            new Vector3D(-C1,  C1,  C1),
            new Vector3D(-C1,  C1, -C1),
            new Vector3D(-C1, -C1,  C1),
            new Vector3D(-C1, -C1, -C1),
        ];

        this.faces = [
            { A:12, B:0, C:8 },
            { A:12, B:8, C:2 },
            { A:13, B:1, C:3 },
            { A:13, B:3, C:9 },
            { A:12, B:2, C:0 },
            { A:13, B:9, C:1 },
            { A:14, B:0, C:2 },
            { A:14, B:10, C:0 },
            { A:14, B:2, C:10 },
            { A:15, B:11, C:3 },
            { A:15, B:3, C:1 },
            { A:15, B:1, C:11 },
            { A:16, B:0, C:5 },
            { A:16, B:5, C:4 },
            { A:16, B:4, C:0 },
            { A:17, B:4, C:5 },
            { A:17, B:1, C:4 },
            { A:18, B:2, C:6 },
            { A:18, B:6, C:7 },
            { A:17, B:5, C:1 },
            { A:18, B:7, C:2 },
            { A:19, B:3, C:7 },
            { A:19, B:7, C:6 },
            { A:20, B:4, C:9 },
            { A:19, B:6, C:3 },
            { A:20, B:9, C:8 },
            { A:20, B:8, C:4 },
            { A:21, B:5, C:10 },
            { A:21, B:11, C:5 },
            { A:22, B:8, C:9 },
            { A:21, B:10, C:11 },
            { A:22, B:6, C:8 },
            { A:22, B:9, C:6 },
            { A:23, B:7, C:11 },
            { A:23, B:10, C:7 },
            { A:23, B:11, C:10 },
            { A:24, B:4, C:8 },
            { A:24, B:0, C:4 },
            { A:25, B:1, C:9 },
            { A:25, B:9, C:4 },
            { A:24, B:8, C:0 },
            { A:25, B:4, C:1 },
            { A:26, B:10, C:5 },
            { A:26, B:0, C:10 },
            { A:27, B:1, C:5 },
            { A:26, B:5, C:0 },
            { A:27, B:11, C:1 },
            { A:27, B:5, C:11 },
            { A:28, B:8, C:6 },
            { A:28, B:2, C:8 },
            { A:29, B:3, C:6 },
            { A:29, B:9, C:3 },
            { A:28, B:6, C:2 },
            { A:29, B:6, C:9 },
            { A:30, B:2, C:7 },
            { A:30, B:10, C:2 },
            { A:31, B:3, C:11 },
            { A:31, B:7, C:3 },
            { A:31, B:11, C:7 },
            { A:30, B:7, C:10 },
        ];
    }
}